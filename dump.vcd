$date
	Mon Sep 22 12:52:53 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 32 ! Result [31:0] $end
$var reg 32 " A [31:0] $end
$var reg 3 # ALUcontrol [2:0] $end
$var reg 32 $ B [31:0] $end
$scope module dut $end
$var wire 32 % A [31:0] $end
$var wire 3 & ALUcontrol [2:0] $end
$var wire 32 ' B [31:0] $end
$var wire 32 ( a_and_B [31:0] $end
$var wire 32 ) a_or_b [31:0] $end
$var wire 32 * not_b [31:0] $end
$var wire 32 + sum [31:0] $end
$var wire 32 , mux_1 [31:0] $end
$var wire 32 - Result [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1111 -
b101 ,
b1111 +
b11111111111111111111111111111010 *
b1111 )
b0 (
b101 '
b0 &
b1010 %
b101 $
b0 #
b1010 "
b1111 !
$end
#10000
b11111111111111111111111111111000 *
b11111111111111111111111111111000 ,
b111 (
b1000 !
b1000 -
b1 #
b1 &
b111 $
b111 '
b1000 +
b1111 "
b1111 %
#20000
b1111000011110000111100001111 ,
b11110000111100001111000011110000 *
b0 (
b11111111111111111111111111111111 )
b0 !
b0 -
b100 #
b100 &
b1111000011110000111100001111 $
b1111000011110000111100001111 '
b11111111111111111111111111111111 +
b11110000111100001111000011110000 "
b11110000111100001111000011110000 %
#30000
b10101010101010100101010101010101 *
b10101010101010100101010101010101 ,
b101 #
b101 &
b1010101010101011010101010101010 $
b1010101010101011010101010101010 '
b1010101010101001010101010101011 +
b10101010101010100101010101010101 "
b10101010101010100101010101010101 %
#40000
b110010 !
b110010 -
b11110 ,
b11111111111111111111111111100001 *
b10100 (
b11110 )
b10 #
b10 &
b11110 $
b11110 '
b110010 +
b10100 "
b10100 %
#50000
